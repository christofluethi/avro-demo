version: '2'

services:    
  zookeeper:
    image: quay.io/strimzi/kafka:0.25.0-kafka-2.8.0
    container_name: zookeeper
    command: [    
        "sh", "-c",    
        "bin/zookeeper-server-start.sh config/zookeeper.properties"    
    ]    
    ports:    
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs    

  kafka:
    image: quay.io/strimzi/kafka:0.25.0-kafka-2.8.0
    container_name: kafka
    command: [
        "sh", "-c",    
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]    
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: apicurio
      POSTGRES_PASSWORD: changeme

  registry:
    image: quay.io/apicurio/apicurio-registry-sql:latest-snapshot
    container_name: registry
    ports:
      - 8085:8080
    environment:
      REGISTRY_LOG_LEVEL: TRACE
      REGISTRY_DATASOURCE_URL: 'jdbc:postgresql://postgres/apicurio'
      REGISTRY_DATASOURCE_USERNAME: apicurio
      REGISTRY_DATASOURCE_PASSWORD: changeme

  akhq:
    container_name: akhq
    image: tchiotludo/akhq
    network_mode: host
    ports:
      - 8080:8080
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            strimzi-kafka:
              properties:
                bootstrap.servers: "localhost:9092"
              schema-registry:
                url: "http://localhost:8085/apis/ccompat/v6"
